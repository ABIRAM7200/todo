on:
  push:
    branches:
      - master
      - develop
name: Maven Deploy | Sonarqube

jobs:
  maven_deploy:
    name: Maven Deploy
    runs-on: ubuntu-latest
    steps:
    - run: echo ::set-env name=HOME::$HOME
      shell: bash
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Create settings.xml file
      run: |
        mkdir -p ${{ env.HOME }}/.m2
        echo "${{ secrets.SETTINGS_XML_FILE_B64 }}" | base64 --decode > ${{ env.HOME }}/.m2/settings.xml
    - name: Build and deploy with Maven
      run: mvn -B clean deploy
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        channel: '#test'
        mention: 'here'
        if_mention: failure,cancelled
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)  
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.

  sonar_analyze:
    name: Maven Sonarqube Analysis
    runs-on: ubuntu-latest
    steps:
    - run: echo ::set-env name=HOME::$HOME
      shell: bash
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Create settings.xml file
      run: |
        mkdir -p ${{ env.HOME }}/.m2
        echo "${{ secrets.SETTINGS_XML_FILE_B64 }}" | base64 --decode > ${{ env.HOME }}/.m2/settings.xml
    - name: Build and sonar analyze with Maven
      run: |-
        mvn -B clean jacoco:prepare-agent install jacoco:report sonar:sonar \
        -Dsonar.branch.name=${GITHUB_REF#refs/heads/} \
        -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} \
        -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
